{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2159,"sourceType":"datasetVersion","datasetId":21}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/ishanthapa/ishan-healthinsurancemarketplace?scriptVersionId=206302376\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-11-10T10:37:20.37726Z","iopub.execute_input":"2024-11-10T10:37:20.377696Z","iopub.status.idle":"2024-11-10T10:37:21.703124Z","shell.execute_reply.started":"2024-11-10T10:37:20.377648Z","shell.execute_reply":"2024-11-10T10:37:21.701206Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/health-insurance-marketplace/Rate.csv\n/kaggle/input/health-insurance-marketplace/hashes.txt\n/kaggle/input/health-insurance-marketplace/Crosswalk2015.csv\n/kaggle/input/health-insurance-marketplace/BusinessRules.csv\n/kaggle/input/health-insurance-marketplace/ServiceArea.csv\n/kaggle/input/health-insurance-marketplace/Crosswalk2016.csv\n/kaggle/input/health-insurance-marketplace/Network.csv\n/kaggle/input/health-insurance-marketplace/BenefitsCostSharing.csv\n/kaggle/input/health-insurance-marketplace/PlanAttributes.csv\n/kaggle/input/health-insurance-marketplace/database.sqlite\n/kaggle/input/health-insurance-marketplace/raw/._Business_Rules_PUF_Reformat.csv\n/kaggle/input/health-insurance-marketplace/raw/._2015\n/kaggle/input/health-insurance-marketplace/raw/Benefits_Cost_Sharing_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/ServiceArea_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/._2014\n/kaggle/input/health-insurance-marketplace/raw/._.sentinel\n/kaggle/input/health-insurance-marketplace/raw/._Plan_Attributes_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/._Plan_Attributes_PUF_2014_2015-03-09.csv\n/kaggle/input/health-insurance-marketplace/raw/Business_Rules_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/._Network_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/.sentinel\n/kaggle/input/health-insurance-marketplace/raw/Machine_Readable_PUF_2015-12-21.xlsx\n/kaggle/input/health-insurance-marketplace/raw/._Plan_Crosswalk_PUF_2014-12-22.csv\n/kaggle/input/health-insurance-marketplace/raw/Network_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/Plan_Crosswalk_PUF_2014-12-22.csv\n/kaggle/input/health-insurance-marketplace/raw/._Plan_ID_Crosswalk_PUF_2015-12-07.CSV\n/kaggle/input/health-insurance-marketplace/raw/Business_Rules_PUF_Reformat.csv\n/kaggle/input/health-insurance-marketplace/raw/._Plan_Attributes_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/._Benefits_Cost_Sharing_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/._Machine_Readable_PUF_2015-12-21.xlsx\n/kaggle/input/health-insurance-marketplace/raw/._Business_Rules_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/Rate_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/._2016\n/kaggle/input/health-insurance-marketplace/raw/Plan_Attributes_PUF_2014_2015-03-09.csv\n/kaggle/input/health-insurance-marketplace/raw/._Business_Rules_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/._Benefits_Cost_Sharing_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/Benefits_Cost_Sharing_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/Business_Rules_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/Rate_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/Network_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/Plan_Attributes_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/._Rate_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/._ServiceArea_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/._Network_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/Service_Area_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/Plan_Attributes_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/._Service_Area_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/Plan_ID_Crosswalk_PUF_2015-12-07.CSV\n/kaggle/input/health-insurance-marketplace/raw/._Rate_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2014/Benefits_Cost_Sharing_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2014/.sentinel\n/kaggle/input/health-insurance-marketplace/raw/2014/Rate_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2014/Plan_Attributes_PUF_2014_2015-03-09.csv\n/kaggle/input/health-insurance-marketplace/raw/2014/Business_Rules_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2014/Network_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2014/Service_Area_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2015/Benefits_Cost_Sharing_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2015/.sentinel\n/kaggle/input/health-insurance-marketplace/raw/2015/Plan_Crosswalk_PUF_2014-12-22.csv\n/kaggle/input/health-insurance-marketplace/raw/2015/Business_Rules_PUF_Reformat.csv\n/kaggle/input/health-insurance-marketplace/raw/2015/Rate_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2015/Network_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2015/Service_Area_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2015/Plan_Attributes_PUF.csv\n/kaggle/input/health-insurance-marketplace/raw/2016/ServiceArea_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/2016/Business_Rules_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/2016/.sentinel\n/kaggle/input/health-insurance-marketplace/raw/2016/Machine_Readable_PUF_2015-12-21.xlsx\n/kaggle/input/health-insurance-marketplace/raw/2016/Network_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/2016/Benefits_Cost_Sharing_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/2016/Rate_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/2016/Plan_Attributes_PUF_2015-12-08.csv\n/kaggle/input/health-insurance-marketplace/raw/2016/Plan_ID_Crosswalk_PUF_2015-12-07.CSV\n","output_type":"stream"}]},{"cell_type":"code","source":"df=pd.read_csv('/kaggle/input/health-insurance-marketplace/BenefitsCostSharing.csv')","metadata":{"execution":{"iopub.status.busy":"2024-11-10T10:37:21.706107Z","iopub.execute_input":"2024-11-10T10:37:21.706771Z","iopub.status.idle":"2024-11-10T10:38:02.616597Z","shell.execute_reply.started":"2024-11-10T10:37:21.706716Z","shell.execute_reply":"2024-11-10T10:38:02.615332Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_31/3794335819.py:1: DtypeWarning: Columns (3,6,9,10,16,17,18) have mixed types. Specify dtype option on import or set low_memory=False.\n  df=pd.read_csv('/kaggle/input/health-insurance-marketplace/BenefitsCostSharing.csv')\n","output_type":"stream"}]},{"cell_type":"code","source":"df.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-11-10T10:38:02.618098Z","iopub.execute_input":"2024-11-10T10:38:02.618467Z","iopub.status.idle":"2024-11-10T10:38:02.662283Z","shell.execute_reply.started":"2024-11-10T10:38:02.618429Z","shell.execute_reply":"2024-11-10T10:38:02.660888Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"                       BenefitName  BusinessYear CoinsInnTier1 CoinsInnTier2  \\\n0  Routine Dental Services (Adult)          2014           20%           NaN   \n1     Dental Check-Up for Children          2014           20%           NaN   \n2        Basic Dental Care - Child          2014           40%           NaN   \n3              Orthodontia - Child          2014           50%           NaN   \n4        Major Dental Care - Child          2014           50%           NaN   \n\n  CoinsOutofNet CopayInnTier1 CopayInnTier2 CopayOutofNet  \\\n0           20%     No Charge           NaN     No Charge   \n1           20%     No Charge           NaN     No Charge   \n2           40%     No Charge           NaN     No Charge   \n3           50%     No Charge           NaN     No Charge   \n4           50%     No Charge           NaN     No Charge   \n\n             EHBVarReason Exclusions  ...              LimitUnit MinimumStay  \\\n0               Above EHB        NaN  ...       Dollars per Year         NaN   \n1     Substantially Equal        NaN  ...  Visit(s) per 6 Months         NaN   \n2     Substantially Equal        NaN  ...                    NaN         NaN   \n3  Additional EHB Benefit        NaN  ...                    NaN         NaN   \n4     Substantially Equal        NaN  ...                    NaN         NaN   \n\n              PlanId QuantLimitOnSvc RowNumber SourceName StandardComponentId  \\\n0  21989AK0010001-00             Yes        68       HIOS      21989AK0010001   \n1  21989AK0010001-00             Yes       104       HIOS      21989AK0010001   \n2  21989AK0010001-00             NaN       110       HIOS      21989AK0010001   \n3  21989AK0010001-00             NaN       111       HIOS      21989AK0010001   \n4  21989AK0010001-00             NaN       112       HIOS      21989AK0010001   \n\n  StateCode StateCode2  VersionNum  \n0        AK         AK           6  \n1        AK         AK           6  \n2        AK         AK           6  \n3        AK         AK           6  \n4        AK         AK           6  \n\n[5 rows x 32 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>BenefitName</th>\n      <th>BusinessYear</th>\n      <th>CoinsInnTier1</th>\n      <th>CoinsInnTier2</th>\n      <th>CoinsOutofNet</th>\n      <th>CopayInnTier1</th>\n      <th>CopayInnTier2</th>\n      <th>CopayOutofNet</th>\n      <th>EHBVarReason</th>\n      <th>Exclusions</th>\n      <th>...</th>\n      <th>LimitUnit</th>\n      <th>MinimumStay</th>\n      <th>PlanId</th>\n      <th>QuantLimitOnSvc</th>\n      <th>RowNumber</th>\n      <th>SourceName</th>\n      <th>StandardComponentId</th>\n      <th>StateCode</th>\n      <th>StateCode2</th>\n      <th>VersionNum</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Routine Dental Services (Adult)</td>\n      <td>2014</td>\n      <td>20%</td>\n      <td>NaN</td>\n      <td>20%</td>\n      <td>No Charge</td>\n      <td>NaN</td>\n      <td>No Charge</td>\n      <td>Above EHB</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>Dollars per Year</td>\n      <td>NaN</td>\n      <td>21989AK0010001-00</td>\n      <td>Yes</td>\n      <td>68</td>\n      <td>HIOS</td>\n      <td>21989AK0010001</td>\n      <td>AK</td>\n      <td>AK</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Dental Check-Up for Children</td>\n      <td>2014</td>\n      <td>20%</td>\n      <td>NaN</td>\n      <td>20%</td>\n      <td>No Charge</td>\n      <td>NaN</td>\n      <td>No Charge</td>\n      <td>Substantially Equal</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>Visit(s) per 6 Months</td>\n      <td>NaN</td>\n      <td>21989AK0010001-00</td>\n      <td>Yes</td>\n      <td>104</td>\n      <td>HIOS</td>\n      <td>21989AK0010001</td>\n      <td>AK</td>\n      <td>AK</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Basic Dental Care - Child</td>\n      <td>2014</td>\n      <td>40%</td>\n      <td>NaN</td>\n      <td>40%</td>\n      <td>No Charge</td>\n      <td>NaN</td>\n      <td>No Charge</td>\n      <td>Substantially Equal</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>21989AK0010001-00</td>\n      <td>NaN</td>\n      <td>110</td>\n      <td>HIOS</td>\n      <td>21989AK0010001</td>\n      <td>AK</td>\n      <td>AK</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Orthodontia - Child</td>\n      <td>2014</td>\n      <td>50%</td>\n      <td>NaN</td>\n      <td>50%</td>\n      <td>No Charge</td>\n      <td>NaN</td>\n      <td>No Charge</td>\n      <td>Additional EHB Benefit</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>21989AK0010001-00</td>\n      <td>NaN</td>\n      <td>111</td>\n      <td>HIOS</td>\n      <td>21989AK0010001</td>\n      <td>AK</td>\n      <td>AK</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Major Dental Care - Child</td>\n      <td>2014</td>\n      <td>50%</td>\n      <td>NaN</td>\n      <td>50%</td>\n      <td>No Charge</td>\n      <td>NaN</td>\n      <td>No Charge</td>\n      <td>Substantially Equal</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>21989AK0010001-00</td>\n      <td>NaN</td>\n      <td>112</td>\n      <td>HIOS</td>\n      <td>21989AK0010001</td>\n      <td>AK</td>\n      <td>AK</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 32 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-11-10T10:38:02.664385Z","iopub.execute_input":"2024-11-10T10:38:02.664764Z","iopub.status.idle":"2024-11-10T10:38:02.672307Z","shell.execute_reply.started":"2024-11-10T10:38:02.664726Z","shell.execute_reply":"2024-11-10T10:38:02.670738Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"(5048408, 32)"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-11-10T10:38:02.67432Z","iopub.execute_input":"2024-11-10T10:38:02.674832Z","iopub.status.idle":"2024-11-10T10:38:02.703369Z","shell.execute_reply.started":"2024-11-10T10:38:02.67476Z","shell.execute_reply":"2024-11-10T10:38:02.702102Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5048408 entries, 0 to 5048407\nData columns (total 32 columns):\n #   Column               Dtype  \n---  ------               -----  \n 0   BenefitName          object \n 1   BusinessYear         int64  \n 2   CoinsInnTier1        object \n 3   CoinsInnTier2        object \n 4   CoinsOutofNet        object \n 5   CopayInnTier1        object \n 6   CopayInnTier2        object \n 7   CopayOutofNet        object \n 8   EHBVarReason         object \n 9   Exclusions           object \n 10  Explanation          object \n 11  ImportDate           object \n 12  IsCovered            object \n 13  IsEHB                object \n 14  IsExclFromInnMOOP    object \n 15  IsExclFromOonMOOP    object \n 16  IsStateMandate       object \n 17  IsSubjToDedTier1     object \n 18  IsSubjToDedTier2     object \n 19  IssuerId             int64  \n 20  IssuerId2            int64  \n 21  LimitQty             float64\n 22  LimitUnit            object \n 23  MinimumStay          float64\n 24  PlanId               object \n 25  QuantLimitOnSvc      object \n 26  RowNumber            int64  \n 27  SourceName           object \n 28  StandardComponentId  object \n 29  StateCode            object \n 30  StateCode2           object \n 31  VersionNum           int64  \ndtypes: float64(2), int64(5), object(25)\nmemory usage: 1.2+ GB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-11-10T10:38:02.705005Z","iopub.execute_input":"2024-11-10T10:38:02.705522Z","iopub.status.idle":"2024-11-10T10:38:07.934824Z","shell.execute_reply.started":"2024-11-10T10:38:02.705469Z","shell.execute_reply":"2024-11-10T10:38:07.933586Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"BenefitName                  0\nBusinessYear                 0\nCoinsInnTier1          1113847\nCoinsInnTier2          4571587\nCoinsOutofNet          1113847\nCopayInnTier1          1113847\nCopayInnTier2          4571587\nCopayOutofNet          1113849\nEHBVarReason           3020737\nExclusions             4572247\nExplanation            4075700\nImportDate                   0\nIsCovered               215980\nIsEHB                  1817362\nIsExclFromInnMOOP       983986\nIsExclFromOonMOOP       982626\nIsStateMandate         4250463\nIsSubjToDedTier1       2465877\nIsSubjToDedTier2       2466054\nIssuerId                     0\nIssuerId2                    0\nLimitQty               4360725\nLimitUnit              4360539\nMinimumStay            5031681\nPlanId                       0\nQuantLimitOnSvc        3264532\nRowNumber                    0\nSourceName                   0\nStandardComponentId          0\nStateCode                    0\nStateCode2                   0\nVersionNum                   0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"num_features = [feature for feature in df.columns if df[feature].dtype !=  '0']\ncat_features = [feature for feature in df.columns if df[feature].dtype ==  '0']\nprint('there are {} num_features : {}' .format(len(num_features) ,num_features))\nprint('there are {} cat_features : {}' .format(len(cat_features) ,cat_features))","metadata":{"execution":{"iopub.status.busy":"2024-11-10T11:02:15.598371Z","iopub.execute_input":"2024-11-10T11:02:15.599838Z","iopub.status.idle":"2024-11-10T11:02:15.624759Z","shell.execute_reply.started":"2024-11-10T11:02:15.599717Z","shell.execute_reply":"2024-11-10T11:02:15.623205Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"there are 32 num_features : ['BenefitName', 'BusinessYear', 'CoinsInnTier1', 'CoinsInnTier2', 'CoinsOutofNet', 'CopayInnTier1', 'CopayInnTier2', 'CopayOutofNet', 'EHBVarReason', 'Exclusions', 'Explanation', 'ImportDate', 'IsCovered', 'IsEHB', 'IsExclFromInnMOOP', 'IsExclFromOonMOOP', 'IsStateMandate', 'IsSubjToDedTier1', 'IsSubjToDedTier2', 'IssuerId', 'IssuerId2', 'LimitQty', 'LimitUnit', 'MinimumStay', 'PlanId', 'QuantLimitOnSvc', 'RowNumber', 'SourceName', 'StandardComponentId', 'StateCode', 'StateCode2', 'VersionNum']\nthere are 0 cat_features : []\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}